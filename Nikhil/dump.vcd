$date
	Thu Sep 12 11:00:17 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ALU_testbench $end
$var wire 1 ! CF_s $end
$var wire 16 " Results_s [15:0] $end
$var reg 1 # CLK_s $end
$var reg 16 $ Data_A_s [15:0] $end
$var reg 16 % Data_B_s [15:0] $end
$var reg 1 & Enable_s $end
$var reg 3 ' Opcode_s [2:0] $end
$var reg 1 ( RST_s $end
$scope module ALU_Test_Functions $end
$var wire 1 ) CLA_Cout $end
$var wire 16 * CLA_Sum [15:0] $end
$var wire 1 + CLK $end
$var wire 1 , Enable $end
$var wire 3 - Opcode [2:0] $end
$var wire 1 . RST $end
$var wire 16 / X [15:0] $end
$var wire 16 0 Y [15:0] $end
$var reg 1 1 CF $end
$var reg 16 2 Data_A [15:0] $end
$var reg 16 3 Data_B [15:0] $end
$var reg 17 4 OverflowCheck [16:0] $end
$var reg 16 5 Results [15:0] $end
$var reg 4 6 State [3:0] $end
$var reg 4 7 StateNext [3:0] $end
$var reg 3 8 test [2:0] $end
$scope module CLA_Adder $end
$var wire 16 9 A [15:0] $end
$var wire 16 : B [15:0] $end
$var wire 3 ; C [3:1] $end
$var wire 1 < Cin $end
$var wire 1 ) Cout $end
$var wire 16 = Sum [15:0] $end
$var wire 4 > X [3:0] $end
$var wire 1 ? Xout $end
$var wire 4 @ Y [3:0] $end
$var wire 1 A Yout $end
$scope module CLA0 $end
$var wire 4 B A [3:0] $end
$var wire 4 C B [3:0] $end
$var wire 3 D C [3:1] $end
$var wire 1 < Cin $end
$var wire 1 E Cout $end
$var wire 4 F Sum [3:0] $end
$var wire 4 G X [3:0] $end
$var wire 1 H Xout $end
$var wire 4 I Y [3:0] $end
$var wire 1 J Yout $end
$upscope $end
$scope module CLA1 $end
$var wire 4 K A [3:0] $end
$var wire 4 L B [3:0] $end
$var wire 3 M C [3:1] $end
$var wire 1 N Cin $end
$var wire 1 O Cout $end
$var wire 4 P Sum [3:0] $end
$var wire 4 Q X [3:0] $end
$var wire 1 R Xout $end
$var wire 4 S Y [3:0] $end
$var wire 1 T Yout $end
$upscope $end
$scope module CLA2 $end
$var wire 4 U A [3:0] $end
$var wire 4 V B [3:0] $end
$var wire 3 W C [3:1] $end
$var wire 1 X Cin $end
$var wire 1 Y Cout $end
$var wire 4 Z Sum [3:0] $end
$var wire 4 [ X [3:0] $end
$var wire 1 \ Xout $end
$var wire 4 ] Y [3:0] $end
$var wire 1 ^ Yout $end
$upscope $end
$scope module CLA3 $end
$var wire 4 _ A [3:0] $end
$var wire 4 ` B [3:0] $end
$var wire 3 a C [3:1] $end
$var wire 1 b Cin $end
$var wire 1 ) Cout $end
$var wire 4 c Sum [3:0] $end
$var wire 4 d X [3:0] $end
$var wire 1 e Xout $end
$var wire 4 f Y [3:0] $end
$var wire 1 g Yout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xg
bx f
xe
bx d
bx c
xb
bx a
bx `
bx _
x^
bx ]
x\
bx [
bx Z
xY
xX
bx W
bx V
bx U
xT
bx S
xR
bx Q
bx P
xO
xN
bx M
bx L
bx K
xJ
bx I
xH
bx G
bx F
xE
bx D
bx C
bx B
xA
bx @
x?
bx >
bx =
0<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
b0 0
b0 /
0.
b0 -
0,
0+
bx *
x)
0(
b0 '
0&
b0 %
b0 $
0#
bx "
x!
$end
#10
1#
1+
#20
0#
0+
#30
1(
1.
1#
1+
#40
0#
0+
#50
0(
0.
0A
b0 P
b0 Z
b0 c
0N
0J
0X
0T
0b
0^
0g
b0 @
0E
b0 M
0O
b0 W
0Y
b0 ;
b0 a
0)
b0 D
b0 F
b0 *
b0 =
b0 G
0H
b0 I
b0 Q
0R
b0 S
b0 [
0\
b0 ]
b0 d
0e
b0 >
0?
b0 f
b0 C
b0 L
b0 V
b0 `
b0 B
b0 K
b0 U
b0 _
b0 4
01
0!
b0 7
b0 6
b0 5
b0 "
b0 8
b0 3
b0 :
b0 2
b0 9
1#
1+
#60
0#
0+
#70
1#
1+
#80
0#
0+
#90
1#
1+
#100
0#
0+
#110
1#
1+
#120
0#
0+
#130
1#
1+
#140
0#
0+
#150
b1 '
b1 -
b100011001000110 %
b100011001000110 0
b110010001100100 $
b110010001100100 /
1#
1+
#160
0#
0+
#170
1#
1+
b100 D
b100 M
b100 W
b100 a
b1010 F
b1010 P
b1010 Z
b1010 c
b1010101010101010 *
b1010101010101010 =
b10 G
b100 I
b10 Q
b100 S
b10 [
b100 ]
b10 d
b100 f
b110 C
b100 L
b110 V
b100 `
b100 B
b110 K
b100 U
b110 _
b100011001000110 3
b100011001000110 :
b110010001100100 2
b110010001100100 9
b1 8
#180
0#
0+
#190
1#
1+
#200
0#
0+
#210
1#
1+
#220
0#
0+
#230
1#
1+
#240
0#
0+
#250
1&
1,
1#
1+
#260
0#
0+
#270
b1010101010101010 5
b1010101010101010 "
1#
1+
#280
0#
0+
#290
1#
1+
#300
0#
0+
#310
1#
1+
#320
0#
0+
#330
1#
1+
#340
0#
0+
#350
0&
0,
1#
1+
#360
0#
0+
#370
b10 '
b10 -
1#
1+
#380
0#
0+
#390
1&
1,
1#
1+
#400
0#
0+
#410
b100010001000100 5
b100010001000100 "
1#
1+
#420
0#
0+
#430
1#
1+
#440
0#
0+
#450
1#
1+
#460
0#
0+
#470
1#
1+
#480
0#
0+
#490
0&
0,
1#
1+
#500
0#
0+
#510
b11 '
b11 -
1#
1+
#520
0#
0+
#530
1&
1,
1#
1+
#540
0#
0+
#550
0&
0,
b110011001100110 5
b110011001100110 "
1#
1+
#560
0#
0+
#570
b0 '
b0 -
1#
1+
#580
0#
0+
#590
1&
1,
1#
1+
#600
0#
0+
#610
0&
0,
1#
1+
#620
0#
0+
#630
b100 '
b100 -
1#
1+
#640
0#
0+
#650
1&
1,
1#
1+
#660
0#
0+
#670
0&
0,
b0 5
b0 "
1#
1+
#680
0#
0+
#690
b101 '
b101 -
1#
1+
#700
0#
0+
#710
1&
1,
1#
1+
#720
0#
0+
#730
0&
0,
1J
1^
b101 @
1N
0X
1b
1E
0O
1Y
b101 ;
0)
b110 D
b0 M
b110 W
b0 a
b0 F
b1111 P
b0 Z
b1111 c
b1111000011110000 *
b1111000011110000 =
b1100 G
b10 I
b1110 Q
b0 S
b1100 [
b10 ]
b1110 d
b0 f
b1010 B
b1010 K
b1010 U
b1010 _
b1010101010101010 2
b1010101010101010 9
b1010101010101010 5
b1010101010101010 "
1#
1+
#740
0#
0+
#750
1#
1+
#760
0#
0+
#770
1&
1,
1#
1+
#780
0#
0+
#790
0&
0,
1A
1X
1O
1T
1)
1g
0N
0J
0b
0^
b1010 @
0E
0Y
b10 ;
b0 D
b100 M
b0 W
b100 a
b110 F
b11 P
b111 Z
b11 c
b11011100110110 *
b11011100110110 =
b110 G
b0 I
b1011 Q
b100 S
b110 [
b0 ]
b1011 d
b100 f
b0 B
b1111 K
b0 U
b1111 _
b1111000011110000 2
b1111000011110000 9
b1111000011110000 5
b1111000011110000 "
1#
1+
#800
0#
0+
#810
1#
1+
#820
0#
0+
#830
1&
1,
1#
1+
#840
0#
0+
#850
0&
0,
0A
0T
0g
b0 @
0X
0O
b0 ;
0)
b110 D
b0 M
b110 W
b0 a
b1100 F
b111 P
b1101 Z
b111 c
b111110101111100 *
b111110101111100 =
b0 G
b110 I
b111 Q
b0 S
b1 [
b110 ]
b111 d
b0 f
b110 B
b11 K
b111 U
b11 _
11
1!
b11011100110110 2
b11011100110110 9
b11011100110110 5
b11011100110110 "
1#
1+
#860
0#
0+
#870
b0 '
b0 -
1#
1+
#880
0#
0+
#890
1&
1,
1#
1+
#900
0#
0+
#910
0&
0,
1#
1+
#920
0#
0+
#930
b110 '
b110 -
1#
1+
#940
0#
0+
#950
1&
1,
1#
1+
#960
0#
0+
#970
0&
0,
b100 P
b1100 Z
b100 c
b100110001001100 *
b100110001001100 =
b100 Q
b0 [
b100 d
b0 K
b110 U
b0 _
01
0!
b11000000110 5
b11000000110 "
b11000000110 2
b11000000110 9
1#
1+
#980
0#
0+
#990
b111 '
b111 -
1#
1+
#1000
0#
0+
#1010
1&
1,
1#
1+
#1020
0#
0+
#1030
0&
0,
b100 M
b100 a
b1000 P
b1000 c
b1000110010001100 *
b1000110010001100 =
b0 Q
b100 S
b0 d
b100 f
b100 K
b100 _
b100011001000110 5
b100011001000110 "
b100011001000110 2
b100011001000110 9
1#
1+
#1040
0#
0+
#1050
1#
1+
#1060
0#
0+
#1070
1#
1+
#1080
0#
0+
#1090
1#
1+
#1100
0#
0+
#1110
1#
1+
#1120
0#
0+
#1130
1#
1+
#1140
0#
0+
#1150
1#
1+
#1160
0#
0+
#1170
1#
1+
#1180
0#
0+
#1190
1#
1+
#1200
0#
0+
#1210
1#
1+
#1220
0#
0+
#1230
1#
1+
